FROM nvcr.io/nvidia/tritonserver:21.04-py3 AS devel

ARG SM="70;75;80"
ARG RELEASE=false

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        git gdb make wget curl && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp http://repo.anaconda.com/miniconda/Miniconda3-4.7.12-Linux-x86_64.sh && \
    bash /var/tmp/Miniconda3-4.7.12-Linux-x86_64.sh -b -p /opt/conda && \
    /opt/conda/bin/conda init && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    /opt/conda/bin/conda clean -afy && \
    rm -rf /var/tmp/Miniconda3-4.7.12-Linux-x86_64.sh
ENV CPATH=/opt/conda/include:$CPATH \
    LD_LIBRARY_PATH=/opt/conda/lib:$LD_LIBRARY_PATH \
    LIBRARY_PATH=/opt/conda/lib:$LIBRARY_PATH \
    PATH=/opt/conda/bin:$PATH \
    CONDA_PREFIX=/opt/conda \
    NCCL_LAUNCH_MODE=PARALLEL

RUN conda update -n base -c defaults conda && \
    conda install -c rapidsai -c nvidia -c numba -c conda-forge cudf=0.19 python=3.8 rapidjson && \
    conda install -c conda-forge nccl cmake=3.19.6 pip && \
    conda clean -afy && \
    cd /opt/conda/lib && \
    rm -rfv cudatool* libcudart* libcublas* libcudadevrt* libcufft* libcuinj64* \
            libcurand* libcusolver* libcusparse* libnvblas* *libnvToolsExt* libnvjpeg* \
            libnvrtc* libnvvm* libicudata* libicui18n* libicuio* libicutest* libicutu* \
            libicuuc*

RUN pip3 install pandas sklearn && \
    pip3 cache purge

# HugeCTR Inference
RUN if [ "$RELEASE" = "true" ]; \
    then \
      mkdir -p /var/tmp && cd /var/tmp && git clone --depth=1 --branch master https://github.com/NVIDIA/HugeCTR.git HugeCTR && cd - && \
      cd /var/tmp/HugeCTR && \
      git submodule update --init --recursive && \
      mkdir -p build && cd build &&\
      cmake -DCMAKE_BUILD_TYPE=Release -DSM=$SM -DENABLE_INFERENCE=ON .. && make -j$(nproc) && make install && \
      export CPATH=/usr/local/hugectr/include:$CPATH && \
      export LIBRARY_PATH=/usr/local/hugectr/lib:$LIBRARY_PATH && \
      cd /var/tmp && git clone --depth=1 --branch main https://github.com/triton-inference-server/hugectr_backend hugectr_inference_backend && cd - && \
      cd /var/tmp/hugectr_inference_backend && \
      mkdir -p build && cd build && \
      cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local/hugectr .. && make -j$(nproc) && make install && \
      rm -rf /var/tmp/HugeCTR /var/tmp/hugectr_inference_backend; \
    else \
      echo "Build container for development successfully"; \
    fi
ENV CPATH=/usr/local/hugectr/include:$CPATH \ 
    LIBRARY_PATH=/usr/local/hugectr/lib:$LIBRARY_PATH \
    LD_LIBRARY_PATH=/usr/local/hugectr/lib:$LD_LIBRARY_PATH \
    PATH=/usr/local/hugectr/bin:$PATH
